//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scenes/-Scripts/Control/Input/Control.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Control : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Control()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Control"",
    ""maps"": [
        {
            ""name"": ""Plane"",
            ""id"": ""6e8488e1-6abc-44be-b60f-f0f2b742dd86"",
            ""actions"": [
                {
                    ""name"": ""ControlKb"",
                    ""type"": ""Value"",
                    ""id"": ""77f2e2a1-b61b-4eb2-bccb-1cb8343aae54"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ControlMouse"",
                    ""type"": ""Value"",
                    ""id"": ""1a49eaae-7f76-4637-a0d5-ea0f29ba344e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Joystick Grab"",
                    ""type"": ""Button"",
                    ""id"": ""768a5ce7-302e-4a67-a762-eb7e8c88d7d1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Rudder"",
                    ""type"": ""Value"",
                    ""id"": ""8b759931-29d9-486f-b0ef-1b81bd27bc1e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Throttle Grab"",
                    ""type"": ""Button"",
                    ""id"": ""36da3ece-97e3-43a3-b764-b71dc18bdb24"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throttle"",
                    ""type"": ""Value"",
                    ""id"": ""5539661c-6ac1-448c-bdec-281c3255c88f"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GroundBrake"",
                    ""type"": ""Button"",
                    ""id"": ""5baa0bfd-de99-41c5-98f9-2a2d080b7fb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Spoilers"",
                    ""type"": ""Button"",
                    ""id"": ""008db0ea-1c63-498d-9578-00aa49fb93d4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mouse Look"",
                    ""type"": ""Value"",
                    ""id"": ""60c350d6-7159-4cec-9531-72ae9738b8f2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a0fcc0c5-c69b-4e10-8925-e6e75d153cfa"",
                    ""path"": ""<OculusTouchController>{RightHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Joystick Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7862dabb-2e1f-41a8-b192-2dcc051842ab"",
                    ""path"": ""<OculusTouchController>{LeftHand}/gripPressed"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle Grab"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75ff8546-7f85-4c43-b7f5-4841d32429ce"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstickClicked"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1199c2f3-f733-4438-9f53-ef0cf529203b"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": ""Hold(duration=0.2)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GroundBrake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a26104ff-4c0b-43df-aeab-182760f4c981"",
                    ""path"": ""<OculusTouchController>/secondaryButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spoilers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a2820732-9f90-4774-b6f2-a956088bb3a5"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Spoilers"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""63e9e5e5-edeb-40c6-bf0c-da924e858c61"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""c857b439-c2e7-48ce-a1bd-bfda0b27ea86"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""77a917c9-425f-47eb-8edf-47f2aa834c99"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""2b8018b7-3719-452d-bb62-93c29e1ce392"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""93ec3872-9429-409c-b67a-85923d4e1bfb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""97eaed99-13fb-4de1-a6af-2508d55a7b2c"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""d941d829-988d-4127-a97f-c51834b13e48"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlKb"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""f967ccd7-c1ef-4795-98c1-8a564227d108"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ControlMouse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up/Down"",
                    ""id"": ""616b5621-fd1e-4ab5-abdb-9143bb1bd4b7"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""91483b60-c760-4cb4-8f46-da23b211b56c"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""09b14399-caf0-4e1b-83e0-a9b8d2c05fb2"",
                    ""path"": ""<Keyboard>/leftCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throttle"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e74963a5-f920-42fb-99b3-39d8f5515930"",
                    ""path"": ""<OculusTouchController>{RightHand}/thumbstick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.125)"",
                    ""groups"": """",
                    ""action"": ""Rudder"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9337b8bf-fddb-4217-b629-040532e4916c"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mouse Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Plane
        m_Plane = asset.FindActionMap("Plane", throwIfNotFound: true);
        m_Plane_ControlKb = m_Plane.FindAction("ControlKb", throwIfNotFound: true);
        m_Plane_ControlMouse = m_Plane.FindAction("ControlMouse", throwIfNotFound: true);
        m_Plane_JoystickGrab = m_Plane.FindAction("Joystick Grab", throwIfNotFound: true);
        m_Plane_Rudder = m_Plane.FindAction("Rudder", throwIfNotFound: true);
        m_Plane_ThrottleGrab = m_Plane.FindAction("Throttle Grab", throwIfNotFound: true);
        m_Plane_Throttle = m_Plane.FindAction("Throttle", throwIfNotFound: true);
        m_Plane_GroundBrake = m_Plane.FindAction("GroundBrake", throwIfNotFound: true);
        m_Plane_Spoilers = m_Plane.FindAction("Spoilers", throwIfNotFound: true);
        m_Plane_MouseLook = m_Plane.FindAction("Mouse Look", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Plane
    private readonly InputActionMap m_Plane;
    private IPlaneActions m_PlaneActionsCallbackInterface;
    private readonly InputAction m_Plane_ControlKb;
    private readonly InputAction m_Plane_ControlMouse;
    private readonly InputAction m_Plane_JoystickGrab;
    private readonly InputAction m_Plane_Rudder;
    private readonly InputAction m_Plane_ThrottleGrab;
    private readonly InputAction m_Plane_Throttle;
    private readonly InputAction m_Plane_GroundBrake;
    private readonly InputAction m_Plane_Spoilers;
    private readonly InputAction m_Plane_MouseLook;
    public struct PlaneActions
    {
        private @Control m_Wrapper;
        public PlaneActions(@Control wrapper) { m_Wrapper = wrapper; }
        public InputAction @ControlKb => m_Wrapper.m_Plane_ControlKb;
        public InputAction @ControlMouse => m_Wrapper.m_Plane_ControlMouse;
        public InputAction @JoystickGrab => m_Wrapper.m_Plane_JoystickGrab;
        public InputAction @Rudder => m_Wrapper.m_Plane_Rudder;
        public InputAction @ThrottleGrab => m_Wrapper.m_Plane_ThrottleGrab;
        public InputAction @Throttle => m_Wrapper.m_Plane_Throttle;
        public InputAction @GroundBrake => m_Wrapper.m_Plane_GroundBrake;
        public InputAction @Spoilers => m_Wrapper.m_Plane_Spoilers;
        public InputAction @MouseLook => m_Wrapper.m_Plane_MouseLook;
        public InputActionMap Get() { return m_Wrapper.m_Plane; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlaneActions set) { return set.Get(); }
        public void SetCallbacks(IPlaneActions instance)
        {
            if (m_Wrapper.m_PlaneActionsCallbackInterface != null)
            {
                @ControlKb.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlKb;
                @ControlKb.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlKb;
                @ControlKb.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlKb;
                @ControlMouse.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlMouse;
                @ControlMouse.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlMouse;
                @ControlMouse.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnControlMouse;
                @JoystickGrab.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnJoystickGrab;
                @JoystickGrab.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnJoystickGrab;
                @JoystickGrab.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnJoystickGrab;
                @Rudder.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnRudder;
                @Rudder.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnRudder;
                @Rudder.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnRudder;
                @ThrottleGrab.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottleGrab;
                @ThrottleGrab.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottleGrab;
                @ThrottleGrab.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottleGrab;
                @Throttle.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottle;
                @Throttle.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottle;
                @Throttle.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnThrottle;
                @GroundBrake.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnGroundBrake;
                @GroundBrake.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnGroundBrake;
                @GroundBrake.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnGroundBrake;
                @Spoilers.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnSpoilers;
                @Spoilers.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnSpoilers;
                @Spoilers.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnSpoilers;
                @MouseLook.started -= m_Wrapper.m_PlaneActionsCallbackInterface.OnMouseLook;
                @MouseLook.performed -= m_Wrapper.m_PlaneActionsCallbackInterface.OnMouseLook;
                @MouseLook.canceled -= m_Wrapper.m_PlaneActionsCallbackInterface.OnMouseLook;
            }
            m_Wrapper.m_PlaneActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ControlKb.started += instance.OnControlKb;
                @ControlKb.performed += instance.OnControlKb;
                @ControlKb.canceled += instance.OnControlKb;
                @ControlMouse.started += instance.OnControlMouse;
                @ControlMouse.performed += instance.OnControlMouse;
                @ControlMouse.canceled += instance.OnControlMouse;
                @JoystickGrab.started += instance.OnJoystickGrab;
                @JoystickGrab.performed += instance.OnJoystickGrab;
                @JoystickGrab.canceled += instance.OnJoystickGrab;
                @Rudder.started += instance.OnRudder;
                @Rudder.performed += instance.OnRudder;
                @Rudder.canceled += instance.OnRudder;
                @ThrottleGrab.started += instance.OnThrottleGrab;
                @ThrottleGrab.performed += instance.OnThrottleGrab;
                @ThrottleGrab.canceled += instance.OnThrottleGrab;
                @Throttle.started += instance.OnThrottle;
                @Throttle.performed += instance.OnThrottle;
                @Throttle.canceled += instance.OnThrottle;
                @GroundBrake.started += instance.OnGroundBrake;
                @GroundBrake.performed += instance.OnGroundBrake;
                @GroundBrake.canceled += instance.OnGroundBrake;
                @Spoilers.started += instance.OnSpoilers;
                @Spoilers.performed += instance.OnSpoilers;
                @Spoilers.canceled += instance.OnSpoilers;
                @MouseLook.started += instance.OnMouseLook;
                @MouseLook.performed += instance.OnMouseLook;
                @MouseLook.canceled += instance.OnMouseLook;
            }
        }
    }
    public PlaneActions @Plane => new PlaneActions(this);
    public interface IPlaneActions
    {
        void OnControlKb(InputAction.CallbackContext context);
        void OnControlMouse(InputAction.CallbackContext context);
        void OnJoystickGrab(InputAction.CallbackContext context);
        void OnRudder(InputAction.CallbackContext context);
        void OnThrottleGrab(InputAction.CallbackContext context);
        void OnThrottle(InputAction.CallbackContext context);
        void OnGroundBrake(InputAction.CallbackContext context);
        void OnSpoilers(InputAction.CallbackContext context);
        void OnMouseLook(InputAction.CallbackContext context);
    }
}
